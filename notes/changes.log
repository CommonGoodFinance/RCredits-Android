2020-11-27 feature/crash (version 2.31)
. fixed one storage leak that is probably the cause of occasional crashes
. fixed a bug in display of company name
. updated license

2020-01-01 feature/permissions (version 2.30)
. added guava to build.gradle for com.google.common.primitives things like Ints.contains(new int[]{1,2,3}, 3)
. manager is automatically signed out after 2 minutes of inactivity
. in API, renamed "rewards" to "creditLine" and "name" to "person" (see server release 3.51r)
. "default" is no longer returned by API or stored in Preferences (we get it from rcard or db instead)
. got the permissions and varying functionality straight for managers, cashiers, individuals, and trial companies
. images of trial companies are the proper orientation and aspect now
. restored the onCreate function in ActActivity accidentally deleted in previous commit
. no longer ask for confirmation of signout request
. bug fixed in Json class to make sure descriptions array is retrieved properly from Preferences
. signed in text is now 2 lines (company on second line)
. copyright: all rights reserved, for now

2019-12-27 feature/permissions (version 2.30)
. filled out .gitignore using gitignore.io/api/gradle,androidstudio
. added buildTypes and lintOptions to build.gradle, to enable generation of APKs
. added jcenter() to repositories in build.gradle, to supply some needed library(s)
. require wifi and rear camera in Manifest
. changed prefs name and staging server URL
. removed dialogs from previous commit, asking for wifi and camera permissions on the fly
. fixed listener bug in ForActivity that caused system crash sometimes (don't listen unless there's something to hear)

2019-11-27 feature/rebrand
. rebranded code as CGPay

To Do:
. save instance state in Act?
. put a menu on every page for report problem (ask for a description of problem, then simply call report(desc) and tell the user the problem has been reported.
. *** require PIN (or RFID) for self-checkout?
. ** let cashier see a list of the most recent N txs that day (manager can see all)
. warn every time if not reconciled within a day (and say how long and how many pending txs)
. maybe use https://code.google.com/p/android-market-api/ to check Google itself for rPOS update availability
. when battery is below 20%, complain and suggest they keep it plugged in
. show "did" in demo mode
. option to include tip in QR?
. automated testing! Using InstrumentationTestRunner? Like this:
		// Typical Sale
		act "Main"
		withButton("scan");
		withImage("logo");
		withText("name", "Corner Store");
		withoutText("welcome");

		whenClick("scan");
		act("Capture");

		whenScan("HTTP://NEW....");
		act("Customer");
		withButton("charge");
		...

. from Mike: Could we teach the app to try to ping the DNS server and/or the base station and try to diagnose the problem ahead of time?
. experiment with making the buttons show a bigger splash when pressed. That might make it more obvious when a digit is missed. Or maybe making the amount figure change more obviously.
. give frequent hints about what to do next
. time out manager (after 24 hours?)
. LATER * use assets consistently (instead of literal strings)
. LATER * ask user to confirm small and large amounts (a magnitude off their average? -- research bank algorithms)
. rework KeyguardManager lines with WindowManager.FLAG_DISMISS_KEYGUARD (see zxing code for tips)
. LATER customer activity: show just ID as name, while async activity fills in the rest
. LATER change "change desc" button to fling left?
. LATER make "r"s fly from Customer screen toward Charge activity on the right and in from Refund activity on the left?
. LATER refactor to put entire zxing android module untouched (possibly in a jar), and just override as needed. This may not be possible, but come close (probably have to keep it in cg.zxing)

@Override
public void onSaveInstanceState(Bundle savedInstanceState) {
  super.onSaveInstanceState(savedInstanceState);
  // Save UI state changes to the savedInstanceState.
  // This bundle will be passed to onCreate if the process is
  // killed and restarted.
  savedInstanceState.putBoolean("MyBoolean", true);
  savedInstanceState.putDouble("myDouble", 1.9);
  savedInstanceState.putInt("MyInt", 1);
  savedInstanceState.putString("MyString", "Welcome back to Android");
  // etc.
}
// The Bundle is essentially a way of storing a NVP ("Name-Value Pair") map, and it will get passed in to onCreate() and also onRestoreInstanceState() where you'd extract the values like this:

@Override
public void onRestoreInstanceState(Bundle savedInstanceState) {
  super.onRestoreInstanceState(savedInstanceState);
  // Restore UI state from the savedInstanceState.
  // This bundle has also been passed to onCreate.
  boolean myBoolean = savedInstanceState.getBoolean("MyBoolean");
  double myDouble = savedInstanceState.getDouble("myDouble");
  int myInt = savedInstanceState.getInt("MyInt");
  String myString = savedInstanceState.getString("MyString");
}

2016-12-28 version 2.19
. bug fixes

2016-11-10 version 2.19
. better handling of fraudulent cards, including asking for photoID when no code stored and offline (bug fix)

2016-10-22 definitive version 2.18
. improved self-service mode
. A.substr function to prevent string-out-of-bounds errors when expected substring is too short
. fixed sysLog and report function
. reinstated db logging

2016-10-14 minor bug fixes and improvements

2016-10-06 release version 2.18 still
. enabled use by individuals
. refactored rCard class
. implemented "show my rCard" feature
. menus
. menu choices for signing in to account or visiting the promo site
. fixed miscellaneous bugs
. created new class B to hold data and processes specific to test/real
. changed logging and reporting to server to use logcat rather than log table (which is no longer used)

2016-09-25 release version 2.18
. refactored all Async tasks as threads (finally fixing the sporadic hanging and crashes caused by Android bugs in AsyncTask class)
. all legacy company cards are translated to new format, so company is identifiable
. made logging systematic
. simplified reporting, including magic amount $80,000.08 that silently sends logs to server and from there to admin
. fixed bug: hashed cardCode was not getting stored in member record properly

2016-08-16 release version 2.17
. hashed card security code and proof of transaction
. possibly fixed bug in offline transaction handling that sometimes rolls back setting status to DONE (resulting in spurious transaction reversals)
. possibly fixed bug in http post handling that resulted in duplicate transaction requests: System.setProperty("http.keepAlive", "false");
. better fakeScan for debugging

2016-07-08 bug fixes
. fixed invalid card message
. improved timeout handling
. allows shorter card security code now (11 chars)

2016-07-06 release version 2.16
. added a timeout function
. changed rCard class to use XXX.YYY-W format for qids both in database and for sending to the server
. minor bug fixes

2016-07-05
. disabled landscape mode in Act class (ie for all activities)
. no attempt to contact server for tx if initial identification request fails for lack of wifi
. rewrote Pairs class using ContextValues
. revised rCard class to accept new QR format and do more format checking (sends new QR to server without : or .)
. added intent.FLAG_ACTIVITY_SINGLE_TOP to goHome (restart) function
. cashier is now directed to ask new customer for photo ID when no wifi
. attempt to charge self is now detected offline

2015-09-04
. fixed 7/21/2015 NullPointerException in bray2bm
. fixed 8/7/2015 NumberFormatException in fmtAmt in afterTx, formatting secret balance when selfhelping

2015-05-12
. fixed bug in oldTx() that caused 3 crashes (trying to parseInt null)

2015-04-09 (version 2.14)
. fixed bug: code was not getting passed properly for charges (and shouldn't be included for Undo)

2015-03-05 (version 2.13)
. send rCard security code with charge requests
. we now delete transactions that get a failure message from server (bug fix)
. avoid saying "you already just completed a similar transaction" if the transaction was not completed (bug fix)
. avoid copying string in db.dump, to prevent out-of-memory errors -- and handle out of memory
. make a way to ask the app to delete a record: !delete:txs,15
. limit life of stored data, to avoid memory crunch (members 180days, txs 180days, log 7days)

2015-02-06 (version 2.12)
. encrypt agent's cardCode
. make a way for admin on server to query individual devices for database records, log, etc., probably using the "time" interface
. made sure the app works when the members site has an error (and returns a mess)
. ask cashier to update, when there is an update available
. fixed out-of-storage handling
. fixed bug in manifest that allowed storing the app on external storage (where Android can delete it) (on 12/11?)
. landscape layout for PhotoId and IdNumber activities
. when server is down for maintenance, don't give message, just do like when wifi is down
. even offline, don't create a duplicate tx
. don't say done until tx is marked done (read the tx status from db, to make sure it is done). log if ever NOT done.
. LOG STUFF! (especially enough info to determine customer and cashier actions and intent)
. disallow UNDO of stale transactions (timeout after 15 minutes)
. sign out for self-serve customers (just report new balance and don't show "Undo" or "Show Balance" buttons)

2014-12-11
. preferences activity (probably happened sooner)
. fixed bug: pressing description button before entering an amount crashed the app
. fixed bug (?): check for progress dialog showing before dismissing it
. when first scan ever has no internet connection, give a message to that effect
. have the capture activity return the QR (c line 424) -- see description activity for an example
. app now (again) reminds user to update, if necessary
. refactored Json class to store the object as a JSONObject, to handle puts and gets more efficiently
. before first rCard purchase, ask for a photo ID: "Ask the customer for a driver's license or state ID. Enter just the number here." Photo looks like customer (yes no).
. (required by FinCEN) when no wifi, disallow USD in and USD out for unknown customers
. when backing out of photoId activity, go back to main

2014-08-09 (version 203)
. handle out of storage and keep it from happening (delete old transactions and customers!)
. fixed bug: needed textView.getText().toString() rather than casting to String (for recent APIs)
. almost totally functional demo mode, including showing updated balance, multiple customers, and color photos
. displays message from server after getting time (for update reminders, etc.)

2014-08-06 (version 202)
. changed AsyncTask to accommodate API versions that weren't working
. added UsdActivity, to select USD in method
. server now sends "can" on all identify ops (app uses it only for the current op and only if signed out)

2014-08-03 (version 201 - first in Play Store)
. refactored pairs as their own class
. when op is completed offline, say so
. check time only before each transaction
. change "cash in" and "cash out" to "USD in" and "USD out"
. allow agents to sign in offline
. distinguish canSignedIn from canSignedOut (return both in can)

2014-07-23
. added recovery from transactions thought to have been made offline, but that actually went through
. use a separate test db and open/switch on gotAgent
. made db global
. many bug fixes
. added cancel option to all questions
. put Periodic class in its own file
. avoided "StaleDataException: Access closed cursor" errors by finishing with Q object before making an API call
. we no longer make the user scan a card twice when switching from real mode to test mode or vice versa

2014-07-10
. now syncs its clock to the server on startup and scan-in
. now records basic data about each customer, including a small B&W photo
. now records each transaction made on the device
. now gives cashier the option of accepting a transaction offline
. refactored json strings as a class
. new DbHelper, Db, and Q classes for managing the database
. revised the RPC interface to accommodate all these changes

2014-03-17
. activated flashlight!
. activated continuous focus in preferences.xml

2014-01-31
. Intercepts "The rCredits server is not reachable at the moment. Try again later. (No peer certificate)" and changes it to "Can't connect to the rCredits server, probably because your clock is way off.".
. Added t() function to make handling string resources easy
. Cleaned up handling of switch between test cards and real cards (and vice versa) -- now requires scan-in before it shows a company name.

2013-12-31
. the description for all charges was getting recorded as "charge". Fixed.
. now does not record agent unless scan succeeds AND server approves it
. companies can now charge customers without an agent scanning in
. switching between test cards and real cards is more forgiving now
. other businesses can use the device if the owner chooses to disable the charging-without-scanning-in feature

2013-12-05
. release 1.0!!
. improved cash in and cash out buttons
. created a testing mode, which hits the test server after scanning a test agent card
. added "TEST" to Main screen when in test mode
. changed Toasts to bottom of screen
. fixed bug which sometimes hung the app switching companies or between real and test

2013-11-15
. revised Customer landscape layout
. handle orientation configchanges in customer, by loading the right layout (don't let Android relaunch)
. made clearer buttons for the 4 tx ops
. put "Scanning..." in middle of screen, so the progress meter hides it
. added version number on main screen
. reversed numeric keypad to agree with calculators rather than phones
. fixed rSmart tests (with a few bug fixes related to handling refunds as negative charges)

2013-11-06
. progress function now works (thanks Blake!)
. update function now works
. finished separating network tasks from the UI, so it runs in all API versions 2.1+
. added landscape layouts for main, customer, and tx
. landscape mode works now for every activity, on every device tested
. scanning works even for devices with front-only cameras, with an alternate build for exceptions (rpos2.apk)

2013-11-03
. added signout feature
. fixed bug: was showing company photo (rather than agent photo)

2013-11-02
. moved cash in and cash out buttons to customer screen
. changed charge and refund buttons to be vertical (indicating credit flow between user and customer)
. changed refund op to "payment" in API, with addition of "goods" parameter
. changed refunds to be negative payments
. added many comments

2013-10-29
. ditched old Viewfinder in favor of rlogo background, with "Ready to scan..."
. now uses sayOk, not mention, for reporting customer balance
. improved numeric keypad layout
. made keypad buttons act up when pressed
. enlarged cash and description buttons
. made goods button stand out
. fixed background highlighting on change description view (failed on first time)
. fixed bug: pressing goods button claimed it was in exchange for cash
. fixed bug: undo always failed
. fixed: goods button was unresponsive and gave no indication of being pressed.
. fixed bug: rebate was blank on both charge and undo
. fixed bug: refund fails (crashes)
. now handles back button on confirmation dialogs (just cancel the dialog)

2013-10-28
. eliminated the viewFinder rectangle
. implemented the charge activity (with all its messages)
. shows a Toast when agent scans in
. restricts to QR codes (in default preferences)
. added onDone and onEnter to other description
. created text input for new transaction description
. made show-balance and undo buttons work
. added a confirmation question before undo
. refactored many activity utilities into a new Act class
. improved dialog handling and intent-management, to avoid leaks
. added a "fakeScan" mode, for testing
. now handles refunds
. eliminated option to enter custom descriptions
. eliminited the need for an "update" op (incorporated into scan-in instead)
. handles various permissions
. created a new MainActivity screen, so scan screen does not go until user tells it to
. created sayFail() function that sets a message to display on restart
. BS works everywhere but in dialogs
 
2013-10-25
. many thanks to Blake, who showed the way, and to the ZXing team who did the heavy lifting
. brought zxing into the project (core/ and javase/ as jars, android/ directly)
. scrapped the plan for a hybrid app
. changed CaptureActivity to portrait, revised and added buttons
. created Customer, Tx, and Change Description activities
. set up static params and functions in Application A
. created rCard class
. very rough and incomplete, but all the major pieces are there (scanning, navigating, data entry, storage, RPC, error handling)