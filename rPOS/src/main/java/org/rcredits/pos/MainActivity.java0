package org.rcredits.pos;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONObject;

import java.io.File;
import java.util.ArrayList;
import java.util.concurrent.Callable;

import static android.support.v4.app.ActivityCompat.startActivity;

public class MainActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        if (A.firstScan) {
            A.firstScan = false;
            // (disabled until Update class compiles) if (!A.deviceId.equals("")) {new Update().execute("");} // async download and install update (if any)
        }
        showAgent();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.tx, menu);
        return true;
    }

    // Gets this error message: Gradle: org.rcredits.pos.CaptureActivity.Update is not abstract and does not override abstract method doInBackground(java.lang.String...) in android.os.AsyncTask
    /*
    private class Update extends AsyncTask<String, Void, Boolean> {
        protected Boolean doInBackground(String zot) {
            String pathToApk = A.apiGetData("update", A.auPair(null, "device", A.deviceId), null);
            if (!pathToApk.equals("")) {
                Intent intent = new Intent(Intent.ACTION_VIEW);
                Uri uri = Uri.fromFile(new File(pathToApk));
                intent.setDataAndType(uri, "application/vnd.android.package-archive");
                startActivity(intent);
                return true;
            }
            return false;
        }

        protected void onPostExecute(Boolean updating) {
            // do nothing
        }
    }
*/

    /**
     * Process the result from QR scan:
     * Get agent, agentName, customer (etc), device, success, message from server.
     */
    public void onScan(View v) {
        String qr = A.getIntentString(this.getIntent(), "data"); // get scanned QR
        qr = A.agent.equals("") ? "NEW:ZZD" : "NEW.AAA"; // DEBUG
        if (qr == null) {
            (new A()).mention("QR scan failed. Try again.");
            return;
        }
        String json = A.apiGetData("identify", A.auPair(null, "member", qr), this);
        /*String json = "{'name':'William Wagner Spademan-Krawerkljpskjfkj', 'place':'Ashfield, MA', 'company':'Common Good Finance'," +
                " 'logon':'1', 'descriptions':['groceries','sundries']," +
                " 'can_refund':'1', 'device':'adlkjaghh'}"; */
        if (json == null) return; // probably server is down
        if (!A.apiValue(json, "ok").equals("1")) {
            A.sayError(this, A.apiValue(json, "message"), null);
            return;
        }

        //if (A.apiValue(json, "logon").equals("1")) { // scanning in
        if (v.getId() == R.id.signed_as) { // DEBUG
            scanIn(json, qr);
        } else {
            scanCustomer(json, qr);
        }
    }

    private void scanIn(String json, String qr) {
        A.agent = qr;
        A.region = A.agent.split("[\\.:]", 2)[0];
        A.agentName = A.apiValue(json, "name");
        A.canRefund = (A.apiValue(json, "manager").equals("1"));
        A.lastTx = "234"; // DEBUG
        A.balance = "$123.45"; // DEBUG
        ArrayList<String> descriptions = A.apiArray(json, "descriptions");
        for (int i = 1; i < A.DESC_COUNT; i++) {
            A.descriptions[i] = i <= descriptions.size() ? descriptions.get(i - 1) : "";
        }
        A.descriptions[0] = "(other)";
        if (A.deviceId.equals("")) A.deviceId = A.apiValue(json, "device");
        showAgent();
    }

    private void showAgent() {
        findViewById(R.id.undo_last).setVisibility((A.canRefund && !A.lastTx.equals("")) ? View.VISIBLE : View.GONE);
        findViewById(R.id.show_balance).setVisibility(A.balance.equals("") ? View.GONE : View.VISIBLE);
        if (!A.agent.equals("")) ((TextView) findViewById(R.id.signed_as)).setText("You: " + A.agentName);
    }

    private void scanCustomer(String json, String qr) {
        A.customer = qr;
        Intent intent = new Intent(this, Customer.class);
        A.putIntentString(intent, "json", json);
        startActivity(intent);
    }
}
